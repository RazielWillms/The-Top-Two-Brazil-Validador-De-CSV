<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /A/wnJYUY14y6QAAAABJRU5ErkJggg==
</value>
  </data>
</root>